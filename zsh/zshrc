# -OH-MY-ZSH-------------------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"
plugins=(
    git
    zsh-autosuggestions
    z
    ripgrep
    fd
    direnv
    web-search
    alias-tips
    autoupdate
    pip
    zsh-autopair
    zsh-syntax-highlighting
)
source $ZSH/oh-my-zsh.sh
# Not oh-my-zsh, but sets up theme;
eval "$(oh-my-posh --init --shell zsh --config ~/.dotfiles/zsh/theme.json)"


# -EXPORTS---------------------------------------------------------------------
export EDITOR=nvim
# Highlights anything with main.* as purple to exa
export EXA_COLORS='main.*=35'
# Makes direnv not log anything
export DIRENV_LOG_FORMAT=
# Changes man pages to be viewed with bat
export MANPAGER='sh -c "col -bx | bat --language man --plain"'
# z doesn't follow symlinks
export _Z_NO_RESOLVE_SYMLINKS=1
# Mail goes to ~/.mbox instead of ~/mbox, less home directory clutter
export MBOX="$HOME/.mbox"


# -ALIASES---------------------------------------------------------------------
for file in ~/.dotfiles/zsh/aliases/*; do
  source $file
done


# -BINDKEYS & ZLE--------------------------------------------------------------
# Maps jk to normal mode in the zsh line editor
bindkey    jk      vi-cmd-mode
# Binds shift-tab to accept autosuggestions
bindkey    '^[[Z'  autosuggest-accept
# Binds history keys to alt-k and alt-j
bindkey    '^[k'   up-line-or-search
bindkey    '^[j'   down-line-or-search
# Clears the prompt, writes the text, and enters it
bindkey -s 'uu'    '^Ucd ..^M'
bindkey -s '^H'    '^Ucd ~/.dotfiles^M'

function zle-keymap-select {
  # Change cursor for depending on the mode
  if [[ ${KEYMAP} == vicmd ]] || [[ $1 = 'block' ]]; then
    echo -ne '\e[2 q'
  elif [[ ${KEYMAP} == main ]] ||
    [[ ${KEYMAP} == viins ]] ||
    [[ ${KEYMAP} = '' ]] ||
    [[ $1 = 'beam' ]]; then
    echo -ne '\e[6 q'
  fi
}
zle -N zle-keymap-select


# -FUNCTIONS-------------------------------------------------------------------
source "$HOME/.dotfiles/zsh/functions.zsh"
source "$HOME/.dotfiles/zsh/extra.zsh"
# This script will load everything in the autload directory
source $HOME/.dotfiles/zsh/autoload.zsh


# -HIGHLIGHT STYLES------------------------------------------------------------
# https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters/main.md
# for all possible highlight options
typeset -A ZSH_HIGHLIGHT_STYLES
# Modifiers like sudo and command
ZSH_HIGHLIGHT_STYLES[precommand]="fg=blue,underline"
# The main part of commands
ZSH_HIGHLIGHT_STYLES[arg0]="fg=cyan"
# Keywords like for and if (purple)
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=#bb9af7'
# 'string', "string", and $"string"
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=green'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=green'
ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]='fg=green'
# 'string and "string (red)
ZSH_HIGHLIGHT_STYLES[single-quoted-argument-unclosed]='fg=#db4b4b'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument-unclosed]='fg=#db4b4b'
# - options (dark cyan)
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=#0db9d7'
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=#0db9d7'


# -MISC------------------------------------------------------------------------
# Anonymous function to set up the crontab file
function () {
  readonly local CRON_FILE="$HOME/.dotfiles/setup/resources/crontab"
  # Modeline to set syntax
  echo "# vim:syntax=crontab\n" > $CRON_FILE
  # Puts crontab into cron.txt
  crontab -l >> $CRON_FILE
}
